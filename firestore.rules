rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(uid) {
      return request.auth != null && request.auth.uid == uid;
    }

    // USERS
    match /users/{userId} {
      allow create: if request.auth != null;
      allow get: if true;
      allow list: if request.auth != null;
      allow update, delete: if isOwner(userId);

      match /bookmarks/{bookmarkId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    // POSTS
    match /posts/{postId} {
      allow get: if true;
      allow list: if true;
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.authorId);

      match /likes/{userId} {
        allow read, list: if true;
        allow create, delete: if isOwner(userId);
      }

      match /thanks/{userId} {
        allow read, list: if true;
        allow create, delete: if isOwner(userId);
      }
    }

    // SIMPLE-POSTS
    match /simple-posts/{postId} {
      allow get: if true;
      allow list: if true;
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.authorId);

       match /likes/{userId} {
        allow read, list: if true;
        allow create, delete: if isOwner(userId);
      }

      match /thanks/{userId} {
        allow read, list: if true;
        allow create, delete: if isOwner(userId);
      }
    }

    // SIMPLE-TRAVELS
    match /simple-travels/{travelId} {
      allow get: if true;
      allow list: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.authorId);

      match /likes/{userId} {
        allow read, list: if true;
        allow create, delete: if isOwner(userId);
      }

      match /thanks/{userId} {
        allow read, list: if true;
        allow create, delete: if isOwner(userId);
      }
    }

    // SPOTS
    match /spots/{spotId} {
      allow get: if true;
      allow list: if true;
      allow create: if request.auth != null;
            allow update, delete: if isOwner(resource.data.authorId);

      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow delete: if isOwner(resource.data.author.id);
      }

      match /likes/{userId} {
        allow read, list: if true;
        allow create, delete: if isOwner(userId);
      }

      match /thanks/{userId} {
        allow read, list: if true;
        allow create, delete: if isOwner(userId);
      }
    }
  }
}
